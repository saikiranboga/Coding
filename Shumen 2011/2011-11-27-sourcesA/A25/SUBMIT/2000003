#include<cstdio>
#include<vector>
#include<iostream>

using namespace std;

const int NMAX=1024;
const int QMAX=10000024;

int n,m;
int a[NMAX][NMAX];
int q;
int rows[QMAX][2];
int s[NMAX][NMAX];
vector<int> v[NMAX];

void Init()
{
    scanf("%d %d", &n, &m);

    int i=0,j=0;
    for (i=0; i<n; i++)
        for (j=0; j<m; j++)
        {
            scanf("%d", &a[i][j]);
            if (a[i][j]==1) v[i].push_back(j);
        }
    scanf("%d", &q);
    for (int i=0; i<q; i++)
        scanf("%d %d", &rows[i][0], &rows[i][1]);
}

void sol(int i, int j)
{
    int b[NMAX];
    for (int k=0; k<m; k++)
    {
        b[k]=0;
    }
    int beg=-1, end=m;
    int raz=end-beg;
    for (int k=i; k<=j; k++)
    {
        for (int l=0; l<v[k].size(); l++)
        {
            b[v[k][l]]=1;
            if (raz%2!=0)
            {
                if (beg<v[k][l] && end>v[k][l])
                {
                    if (v[k][l]-beg<end-v[k][l]) beg=v[k][l];
                    else end=v[k][l];
                    raz=end-beg;
                }
            }
        }
    }
    beg++;
    int cur=0;
    int max=0;
    for (int k=beg;k<end; k++)
    {
        if (b[k]==0) cur++;
        else
        {
            if (cur>max) max=cur;
        }
    }
    if (max==0) max=cur;
    printf("%d\n", max*(j-i+1));
}

int main()
{
    Init();
    for (int i=0; i<q; i++)
    {
        sol(rows[i][0]-1,rows[i][1]-1);
    }
    return 0;
}
