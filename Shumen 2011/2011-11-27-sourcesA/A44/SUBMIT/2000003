#include <stdio.h>

int n, m, t;
int v[1002][1002], sus[1002], sol[1002][1002];

inline int max (int a, int b) {return a > b ? a : b;}

void rez ()
{
    int i, j, k, nr;

    for (i = 1; i <= n; i ++)
    {
        for (j = 1; j <= m; j ++)
            sus[j] = v[i][j] ? 0 : sus[j] + 1;
        for (k = 1; k <= i; k ++)
            for (j = 1, nr = 0; j <= m + 1; j ++)
                if (sus[j] >= k)
                    nr ++;
                else
                {
                    sol[i - k + 1][i] = max (sol[i - k + 1][i], nr * k);
                    nr = 0;
                }
        for (k = 1; k <= i; k ++)
            sol[i - k + 1][i] = max (sol[i - k + 1][i], sol[i - k + 2][i]);
    }
}

int main ()
{
//    freopen ("standard.in", "r", stdin);
//    freopen ("standard.out", "w", stdout);

    scanf ("%d %d", &n, &m);

    int i, j, l1 ,l2;

    for (i = 1; i <= n; i ++)
        for (j = 1; j <= m; j ++)
            scanf ("%d", &v[i][j]);

    rez ();

    scanf ("%d", &t);
    while (t --)
    {
        scanf ("%d %d", &l1, &l2);
        printf ("%d\n", sol[l1][l2]);
    }
    return 0;
}
