/*
TASK: standart
LANG: C++
*/
#include <stdio.h>
#include <iostream>
#include <string.h>

using namespace std;

int n, m, q;
int ma3x[1024][1024];
int asked[1024][1024];

void init()
{
    scanf("%d %d", &n, &m);
    for(int i = 1; i <= n; i ++)
        for(int j = 1; j <= m; j ++)
        {
            scanf("%d", &ma3x[i][j]);
            ma3x[i][j] += ma3x[i][j - 1] + ma3x[i - 1][j] - ma3x[i - 1][j - 1];
        }
}

bool empty(int x1, int y1, int x2, int y2)
{
    return ma3x[x2][y2] - ma3x[x2][y1 - 1] - ma3x[x1 - 1][y2] + ma3x[x1 - 1][y1 - 1] == 0;
}

void solve()
{
    memset(asked, -1, sizeof(asked));
    
    scanf("%d", &q);
    
    int r1, r2;
    for( ; q; q --)
    {
        scanf("%d %d", &r1, &r2);
        
        if(asked[r1][r2] != -1)
        {
            printf("%d\n", asked[r1][r2]);
            continue;
        }
        
        int mx = 0;
        int s = 0;
        for(int l = 1; l <= m; l ++)
            for(int r = l; r <= m; r ++)
            {
                s = 0;
                for(int k = r1; k <= r2; k ++)
                    if(empty(k, l, k, r))
                        s += (r - l + 1);
                    else
                    {
                        if(mx < s) mx = s;
                        s = 0;
                    }
                if(mx < s) mx = s;
            }
        asked[r1][r2] = mx;
        printf("%d\n", mx);
    }
}

int main()
{
    init();
    solve();

    return 0;
}
