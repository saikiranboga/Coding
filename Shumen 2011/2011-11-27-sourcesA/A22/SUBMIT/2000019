#include<iostream>
#include<cstring>
#include<algorithm>
#include<vector>
#include<cmath>
#include<string>
using namespace std;
struct point
{
    int h,d,bp;
};
vector<point> v;
long long  n,m;
long  mb[12400];
long  br[1000024];
long long inf;
int cmp(point a,point b)
{
    if(a.d<b.d) return 1;
    else return 0;
}
void read()
{
    point b;
    int i,br2=0,a;
    cin>>n>>m;
    for(i=1;i<=n;i++)
    {
        cin>>a;
        inf+=a;
        b.h=br2;
        b.d=a;
        b.bp=i-1;
        v.push_back(b);
        br2+=5;
    
    }
    sort(v.begin(),v.end(),cmp);
}
int solve()
{
  long long  i,j,maxbr=0;
    long long int mini=inf,a1,a2,l=0,t=0,md;
    for(i=0;i<n;i++)
    {
        for(j=i+1;j<n;j++)
        {
            if(v[i].h<v[j].h)
            {
                l=1;
                t=j;
                j=n;
            }
        }
        if(l)
        {
            br[t]++;
            if(br[t]>maxbr) maxbr=br[t];
            l=0;
            
        }
        
    }
    return maxbr;
}
void change(int i)
{ int f,t,j,l1=0,l2=0;
    int g,sad,u;
   
    for(j=0;j<n;j++)
    {
        if(v[j].bp==i)
        {
            f=j;
            l1=1;
            
        } 
        if(v[j].bp==i+1) 
        {
            t=j;
            l2=1;

        }
        if(l1&&l2) break;
    }
    g=v[f].d;
    sad=v[f].h;
    u=v[f].bp;

    v[f].h=v[t].h;
    v[f].bp=v[t].bp;
    v[t].h=sad;
    v[t].bp=u;
}
int main()
{
    int i,l=0,re,sad;
    read();
    for(i=0;i<m;i++)
    {
        cin>>sad;
        if(sad==0)
        {
            re=solve();
            l=1;
            cout<<re<<endl;
        }        
        if(sad) 
        {
            change(sad-1);
            l=0;
        }
        memset(br,0,sizeof(br));
    }
    return 0;
}