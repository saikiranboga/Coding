#include<iostream>
#include<cstdio>
#include<algorithm>
#include<queue>
using namespace std;

struct bla
{
    int x,y;
    bool operator < (const bla &p) const{
        return p.x<x;
    }
};

int n,m,b[1000001],c[1000001];
priority_queue<bla> q;
bla a[1000001];

int main()
{
    int i,ans,res,d;
    scanf("%d%d",&n,&m);
    for(i=1;i<=n;i++)
    {
        scanf("%d",&a[i].x);
        a[i].y=i;
    }
    q.push(a[1]);
    b[1]=0;
    for(i=2;i<=n;i++)
    {
        res=0;
        if(q.empty())continue;
        while(!q.empty()&&q.top().x<a[i].x)
        {
            res++;
            c[q.top().y]=a[i].y;
            q.pop();
        }
        q.push(a[i]);
        b[i]=res;
        if(res>ans)ans=res;
    }
    for(;m;m--)
    {
        scanf("%d",&d);
        if(d)
        {
            if(a[d].x>a[d+1].x)
            {
                b[c[d+1]]--;
                c[d+1]=d+1;
                b[d]++;
                for(i=1;i<=n;i++)
                 if(c[i]==d&&a[i].x>a[d+1].x)c[i]=d+1;
            }
            else if(a[d].x<a[d+1].x)
            {
                c[d]=0;
                for(i=d+2;i<=n;i++)
                 if(a[i].x>a[d].x){c[d]=i;b[i]++;break;}
                b[d+1]--;
                b[d+1]+=b[d];
                b[d]=0;
            }
            swap(a[d],a[d+1]);
            swap(b[d],b[d+1]);
            swap(c[d],c[d+1]);
        }
        else
        {
            ans=0;
            for(i=1;i<=n;i++)
             ans=max(ans,b[i]);
            printf("%d\n",ans);
        }
    }
}
