#include <cstdio>
#include <iostream>

using namespace std;

int N;
int M;

int a[1024][1024];
int sum[1024][1024];
int d[1024][1024];
int u[1024][1024];
int l[1024][1024];
int r[1024][1024];

void scan(){
  scanf ( "%d%d", &N, &M );
  
  for ( int i = 1; i <= N; ++i )
    for ( int j = 1; j <= M; ++j )
      scanf ( "%d", a[i] + j );
}

int ret_sum ( int x1, int y1, int x2, int y2 ){
  return sum[x2][y2] - sum[x2][y1 - 1] - sum[x1 - 1][y2] + sum[x1 - 1][y1 - 1];
}



void solve(){
  for ( int i = 0; i <= N + 1; ++i )
    a[i][0] = a[i][M + 1] = 1;
  
  for ( int j = 0; j <= M + 1; ++j )
    a[0][j] = a[N + 1][j] = 1;

  for ( int i = 0; i <= N + 1; ++i )
    for ( int j = 0; j <= M + 1; ++j )
      if ( i == 0 && j == 0 )
	 sum[i][j] = a[i][j];
      else
	if ( i == 0 )
	  sum[i][j] = sum[i][j - 1] + a[i][j];
      else
	if ( j == 0 )
	  sum[i][j] = sum[i - 1][j] + a[i][j];
      else
	sum[i][j] = sum[i - 1][j] + sum[i][j - 1] - sum[i - 1][j - 1] + a[i][j];
   
  


   
   int Q;
  
  scanf ( "%d", &Q );
  
  for ( int i = 0; i < Q; ++i ){
    int x, y;
    
    scanf ( "%d%d", &x, &y );
    
    int mx = 0, xx = x;
    
    for ( int p = x; p <= y; ++ p )
      for ( int q = 1; q <= M; ++q )
	if ( a[p][q] == 0 )
	for ( int p1 = p; p1 <= y; ++p1 )
	  for ( int q1 = q; q1 <= M; ++q1 )
	   if ( !ret_sum ( p, q, p1, q1 ) ) {
	     mx = max ( mx, ( p1 - p + 1 ) * ( q1 - q + 1 ) );
	  //   if ( mx == ( p1 - p + 1 ) * ( q1 - q + 1 ) ) cout << p << " " << p1 << " " << q << " " << q1 << " " << ret_sum ( p, q, p1, q1 ) << endl;
	   }
	   else break;
    printf ( "%d\n", mx );
    
  }
}

int main(){
  scan();
  solve();
}