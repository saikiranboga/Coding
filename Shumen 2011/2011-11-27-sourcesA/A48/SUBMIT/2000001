#include <iostream>
#include <fstream>
using namespace std;

const int N=1000005;
int stack[N],v[N],nr[N],n,m;

ifstream in("date.in");

inline void sch(int& a,int& b)
{
    int c=a;a=b;b=c;
}

inline int max(int a,int b)
{
    return a>b ? a : b;
}

int proc()
{
    int rez=-1;
    for (int i=n;i;i--)
    {
        while (stack[0] && stack[stack[0]]<v[i])
        {
            rez=max(rez,nr[stack[0]]);
            nr[stack[0]--]=0;
        }
        nr[stack[0]]++;
        stack[++stack[0]]=v[i];
    }
    while (stack[0])
    {
        rez=max(rez,nr[stack[0]]);
        nr[stack[0]--]=0;
    }
    return rez;
}

void brute()
{
    int t;
    while (m--)
    {
        cin>>t;
        if (t)
        {
            sch(v[t],v[t+1]);
            continue;
        }
        cout<<proc()<<"\n";
    }
}

void read()
{
    cin>>n>>m;
    for (int i=1;i<=n;i++)
        cin>>v[i];
}

int main()
{
    read();
    brute();
    return 0;
}

