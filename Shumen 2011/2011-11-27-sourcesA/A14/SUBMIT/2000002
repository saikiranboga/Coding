#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

const int MAXN = 1 << 20;

int n , q;
int y[MAXN];
int cnt[MAXN];

int res;

int sq ( int x ) { return x * x; }

int dist ( int x1 , int y1 , int x2 , int y2 )
{
    return sq ( x2 - x1 ) + sq ( y2 - y1 );
}

void go ( int pos )
{
    int i , j;
    memset ( cnt , 0 , sizeof cnt );
    for (i = pos; i <= n; ++i)
    {
        int mpos = 0;
        int mdist = 1 << 29;

        for (j = i + 1; j <= n; ++j)
        {
            if ( (y[j] > y[i]) && (dist ( 5 * i , y[i] , 5 * j , y[j] ) < mdist) )
            {
                mpos = j;
                mdist = dist ( 5 * i , y[i] , 5 * j , y[j] );
            }
        }

        if ( mpos != 0 )
            ++cnt[mpos];
    }
    res = 0;
    for (i = 1; i <= n; ++i)
        res = max ( res , cnt[i] );
}

int main()
{
    scanf ( "%d%d" , &n , &q );

    int i;
    for (i = 1; i <= n; ++i)
        scanf ( "%d" , y + i );

    go ( 1 );

    for (i = 0; i < q; ++i)
    {
        int c;
        scanf ( "%d" , &c );
        if ( c == 0 ) printf ( "%d\n" , res );
        else
        {
            swap ( y[c] , y[c + 1] );
            go ( 1 );
        }
    }

    return 0;
}

